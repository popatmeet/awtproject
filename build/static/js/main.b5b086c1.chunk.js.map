{"version":3,"sources":["assets/ResumeTemplate.js","assets/ResumeInputForm.js","App.js","reportWebVitals.js","index.js"],"names":["ResumeTemplate","generateNew","formData","JSON","parse","localStorage","getItem","latestSkills","skill","icon","filter","item","index","skills","includes","latestHobbies","hobby","hobbies","useEffect","document","getElementById","style","backgroundImage","image","className","onClick","window","location","reload","htmlToImage","quality","then","dataUrl","createElement","download","pdf","jsPDF","imgProps","getImageProperties","pdfWidth","internal","pageSize","getWidth","pdfHeight","height","width","addImage","save","id","alt","color","phone","email","website","address","map","fname","lname","role","objective","workExpDetails","company","startMonth","presentWork","endMonth","designation","responsibilities","educationDetails","cname","fromMonth","toMonth","sname","course","useStyles","makeStyles","theme","formControl","margin","spacing","backgroundColor","chips","display","flexWrap","chip","background","fontWeight","textShadow","noLabel","marginTop","selectRoot","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","getStyles","name","selectedSkills","indexOf","typography","fontWeightRegular","fontWeightMedium","ResumeInputForm","classes","useTheme","useState","educationCount","setEducationCount","workExpCount","setWorkExpCount","setFname","setLname","setRole","setObjective","setPhone","setEmail","setWebsite","setAddress","setEducationDetails","setWorkExpDetails","setImage","isImage","setIsImage","showResume","setShowResume","setSelectedSkills","selectedHobbies","setSelectedHobbies","idList","sessionStorage","setItem","onload","removeItem","clearAll","checkDates","flag","element","length","isNaN","onChangeEducationFields","value","field","obj","latestData","el","onChangeWorkFields","expand","coll","classList","toggle","content","nextElementSibling","lastChild","marginBottom","educationFields","push","type","onChange","e","target","placeholder","required","alignSelf","inputProps","toString","timeFormat","dateFormat","closeOnSelect","date","_d","getFullYear","workExpFields","justifyContent","checked","htmlFor","fontSize","generate","a","getElementsByClassName","i","validity","valid","some","stringify","alert","getElementsByName","pattern","paddingBottom","disabled","marginRight","FormControl","InputLabel","paddingLeft","marginLeft","Select","labelId","root","multiple","event","input","Input","renderValue","selected","Chip","label","MenuItem","accept","file","files","reader","FileReader","onloadend","base64String","result","replace","readAsDataURL","loadFile","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b5b086c1.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport * as htmlToImage from 'html-to-image';\nimport { jsPDF } from \"jspdf\";\nimport './ResumeTemplate.css';\n\nconst downloadPdf = () => {\n  htmlToImage.toPng(document.getElementById('resume'), { quality: 0.95 })\n  .then(function (dataUrl) {\n    var link = document.createElement('a');\n    link.download = 'my-image-name.jpeg';\n    const pdf = new jsPDF();\n    const imgProps= pdf.getImageProperties(dataUrl);\n    const pdfWidth = pdf.internal.pageSize.getWidth();\n    const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;\n    pdf.addImage(dataUrl, 'PNG', 0, 0,pdfWidth, pdfHeight);\n    pdf.save(\"download.pdf\"); \n  });\n}\n\nfunction ResumeTemplate({generateNew}) {\n\tconst formData = JSON.parse(localStorage.getItem('formData'));\n\tconst skills = [\n        {skill: 'HTML', icon: 'fa-html5'},\n        {skill: 'CSS', icon: 'fa-css3-alt'},\n        {skill: 'Java Script', icon: 'fa-js'},\n        {skill: 'React.JS', icon: 'fa-react'},\n    ];\n    const hobbies = [\n        {hobby: 'Reading', icon: 'fa-book'},\n        {hobby: 'Music', icon: 'fa-music'},\n        {hobby: 'Gaming', icon: 'fa-gamepad'},\n        {hobby: 'Gardening', icon: 'fa-tree'},\n    ];\n\tconst latestSkills = skills.filter((item, index) => {\n\t\treturn formData[0].skills.includes(item.skill);\n\t});\n\tconst latestHobbies = hobbies.filter((item, index) => {\n\t\treturn formData[0].hobbies.includes(item.hobby);\n\t});\n\n\tuseEffect(() => {\n\t\tdocument.getElementById('profileImage').style.backgroundImage = `url(data:image/png;base64,${formData[0]?.image})`;\n\t}, [])\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"download\">\n        <button className=\"generateNew\" onClick={() => {\n\t\t\tgenerateNew();\n\t\t\twindow.location.reload(false)\n\t\t}}>Generate New</button>\n        <button className=\"generateNew\" onClick={() => downloadPdf()} >Download</button>\n      </div>\n\t\t<div className=\"resume\" id=\"resume\">\n\t\t\t<div className=\"left\">\n\t\t\t\t<div className=\"img_holder\">\n\t\t\t\t\t<img className=\"imageClass\" id=\"profileImage\" alt=\"\" />  \n\t\t\t\t</div>\n\t\t\t\t<div className=\"contact_wrap pb\">\n\t\t\t\t\t<div className=\"title\" style={{ color: '#bdc3c7' }}>\n\t\t\t\t\t\tContact\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"contact\">\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<div className=\"li_wrap\">\n\t\t\t\t\t\t\t\t\t<div className=\"icon\"><i className=\"fas fa-mobile-alt\" aria-hidden=\"true\"></i></div>\n\t\t\t\t\t\t\t\t\t<div className=\"text\">{formData[0].phone}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<div className=\"li_wrap\">\n\t\t\t\t\t\t\t\t\t<div className=\"icon\"><i className=\"fas fa-envelope\" aria-hidden=\"true\"></i></div>\n\t\t\t\t\t\t\t\t\t<div className=\"text\">{formData[0].email}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<div className=\"li_wrap\">\n\t\t\t\t\t\t\t\t\t<div className=\"icon\"><i className=\"fab fa-weebly\" aria-hidden=\"true\"></i></div>\n\t\t\t\t\t\t\t\t\t<div className=\"text\">{formData[0].website}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<div className=\"li_wrap\">\n\t\t\t\t\t\t\t\t\t<div className=\"icon\"><i className=\"fas fa-map-signs\" aria-hidden=\"true\"></i></div>\n\t\t\t\t\t\t\t\t\t<div className=\"text\">{formData[0].address}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"skills_wrap pb\">\n\t\t\t\t\t<div className=\"title\" style={{ color: '#bdc3c7' }}>\n\t\t\t\t\t\tSkills\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"skills\">\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t{latestSkills.map((item, index) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<li key={index}>\n\t\t\t\t\t\t\t\t\t\t<div className=\"li_wrap\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"icon\"><i className={`fab ${item.icon}`}></i></div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"text\">{item.skill}</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"hobbies_wrap pb\">\n\t\t\t\t\t<div className=\"title\" style={{ color: '#bdc3c7' }}>\n\t\t\t\t\t\thobbies\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"hobbies\">\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t{latestHobbies.map((item, index) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t<div className=\"li_wrap\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"icon\"><i className={`fas ${item.icon}`}></i></div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"text\">{item.hobby}</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"right\">\n\t\t\t\t<div className=\"header\">\n\t\t\t\t\t<div className=\"name_role\">\n\t\t\t\t\t\t<div className=\"name\" style={{ color: '#e0ffff' }}>\n\t\t\t\t\t\t \t{formData[0].fname} {formData[0].lname}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"role\">\n\t\t\t\t\t\t\t{formData[0].role}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"about\">\n\t\t\t\t\t\t{formData[0].objective}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"right_inner\">\n\t\t\t\t\t<div className=\"exp\">\n\t\t\t\t\t\t<div className=\"title\">\n\t\t\t\t\t\t\texperience\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"exp_wrap\">\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t{formData[0].workExpDetails.map((item, index) => {\n\t\t\t\t\t\t\t\t\treturn (item.company) ?\n\t\t\t\t\t\t\t\t\t(<li key={index}>\n\t\t\t\t\t\t\t\t\t\t<div className=\"li_wrap\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"date\">\n\t\t\t\t\t\t\t\t\t\t\t\t{item.startMonth} - {item.presentWork ? 'Present' : item.endMonth}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"info\">\n\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"info_title\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{item.designation}\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"info_com\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{item.company}\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"info_cont\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{item.responsibilities}\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</li>) : ''\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"education\">\n\t\t\t\t\t\t<div className=\"title\">\n\t\t\t\t\t\t\tEducation\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"education_wrap\">\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t{formData[0].educationDetails.map((item, index) => {\n\t\t\t\t\t\t\t\t\treturn (item.cname) ?\n\t\t\t\t\t\t\t\t\t(<li key={index}>\n\t\t\t\t\t\t\t\t\t\t<div className=\"li_wrap\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"date\">\n\t\t\t\t\t\t\t\t\t\t\t\t{item.fromMonth} - {item.toMonth}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"info\">\n\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"info_title\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{item.cname}\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"info_com\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{item.sname}\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"info_cont\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{item.course}\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</li>) : ''})}\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n  );\n}\n\nexport default ResumeTemplate;","import React, { useEffect, useState } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Datetime from \"react-datetime\";\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Chip from '@material-ui/core/Chip';\nimport ResumeTemplate from './ResumeTemplate';\nimport 'react-datetime/css/react-datetime.css';\nimport './ResumeTemplate.css';\n\n// styles for the drop downs and chips\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n    margin: theme.spacing(1),\n      width: '100%',\n      backgroundColor: 'white'\n    },\n    chips: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    chip: {\n      margin: 2,\n      background: 'cadetblue',\n      color: 'white',\n      fontWeight: 'bold',\n      textShadow: '1px 1px black'\n    },\n    noLabel: {\n      marginTop: theme.spacing(3),\n    },\n    selectRoot: {\n      '&:focus':{\n         backgroundColor:'white'\n      }\n    }\n  }));\n  \n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 250,\n      },\n    },\n  };\n  \n  function getStyles(name, selectedSkills, theme) {\n    return {\n      fontWeight:\n        selectedSkills.indexOf(name) === -1\n          ? theme.typography.fontWeightRegular\n          : theme.typography.fontWeightMedium,\n    };\n  }\n\nfunction ResumeInputForm() {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    const [educationCount, setEducationCount] = useState(1);\n    const [workExpCount, setWorkExpCount] = useState(1);\n\n    // Personal fields\n    const [fname, setFname] = useState('');\n    const [lname, setLname] = useState('');\n    const [role, setRole] = useState('');\n    const [objective, setObjective] = useState('');\n\n    // Contact fields\n    const [phone, setPhone] = useState('');\n    const [email, setEmail] = useState('');\n    const [website, setWebsite] = useState('');\n    const [address, setAddress] = useState('');\n\n    // Education fields\n    const [educationDetails, setEducationDetails] = useState([\n        {cname: '', sname: '', course: '', fromMonth: '', toMonth: ''},\n        {cname: '', sname: '', course: '', fromMonth: '', toMonth: ''},\n        {cname: '', sname: '', course: '', fromMonth: '', toMonth: ''}\n    ]);\n\n    // Work Experience fields\n    const [workExpDetails, setWorkExpDetails] = useState([\n        {designation: '', company: '', responsibilities: '', startMonth: '', endMonth: '', presentWork: false},\n        {designation: '', company: '', responsibilities: '', startMonth: '', endMonth: '', presentWork: false},\n        {designation: '', company: '', responsibilities: '', startMonth: '', endMonth: '', presentWork: false}\n    ]);\n\n    // Profile image\n    const [image, setImage] = useState('');\n    const [isImage, setIsImage] = useState(false);\n\n    const [showResume, setShowResume] = useState(false);\n\n    const [selectedSkills, setSelectedSkills] = useState([]);\n    const [selectedHobbies, setSelectedHobbies] = useState([]);\n\n    const skills = ['HTML', 'CSS', 'Java Script', 'React.JS'];\n  \n    const hobbies = ['Reading', 'Music', 'Gaming', 'Gardening']\n\n    var idList = ['fname', 'lname', 'role', 'objective', 'phone', 'email',\n    'website', 'address']\n\n    useEffect(() => {\n        sessionStorage.setItem(\"reloading\", \"true\");\n    }, []);\n    \n    // Ensure that form is cleared on page refresh\n    window.onload = function() {\n        const reloading = sessionStorage.getItem(\"reloading\");\n        if (reloading) {\n            sessionStorage.removeItem(\"reloading\");\n            clearAll();\n        }\n    }\n\n    // Additional validations before submitting the form\n    const checkValidity = () => {\n        const validity = idList.map((item, index) => {\n            if (!document.getElementById(item).validity.valid || !selectedHobbies.length || !selectedSkills.length || !isImage || checkDates()) {\n                return false;\n            }\n            return true;\n        });\n        return validity.some((item, index) => {\n            return item === false;\n        });\n    }\n\n    const checkDates = () => {\n        let flag = false;\n        educationDetails.map((element, index) => {\n            if (element.cname.length > 0 && !(element.fromMonth || element.toMonth)) {\n                flag = true;\n            } else if (element.cname.length > 0 && element.fromMonth && element.toMonth && ((element.fromMonth > element.toMonth) || element.toMonth > 2021)) {\n                flag = true;\n            }\n            return 0;\n        });\n        workExpDetails.map((element, index) => {\n            // if (element.designation.length > 0 && (!element.startMonth || !(element.endMonth || element.presentWork))) {\n            //     flag = true;\n            // } \n            // if (element.designation.length > 0 && !element.presentWork) {\n            //     if (element.designation.length > 0 && element.startMonth && element.endMonth && element.startMonth > element.endMonth) {\n            //     flag = true;\n            // }\n            // }\n            // return 0;\n            if (element.presentWork) {\n                if (isNaN(element.startMonth)) {\n                    flag = true;\n                }\n            } else {\n                if (element.designation.length > 0 && (!(element.startMonth || element.endMonth) || (isNaN(element.startMonth || isNaN(element.endMonth))))) {\n                    flag = true;\n                }\n                if (element.designation.length > 0 && element.startMonth && element.endMonth && ((element.startMonth > element.endMonth) || (element.endMonth > 2021))) {\n                    flag = true;    \n                }\n            }\n            return 0;\n        });\n        return flag;\n    }\n\n    const loadFile = (event) => {\n        const file = event.target.files[0];\n        const reader = new FileReader();\n        reader.onloadend = () => {\n        const base64String = reader.result.replace('data:', '').replace(/^.+,/, '');\n        setImage(base64String);\n        setIsImage(true);\n        };\n        reader.readAsDataURL(file);\n    }\n\n    const handleChange = (event) => {\n        setSelectedSkills(event.target.value);\n    };\n    \n    const handleChangeHobbies = (event) => {\n        setSelectedHobbies(event.target.value);\n    };\n\n    const onChangeEducationFields = (value, field, id) => {\n        const obj = {\n            ...educationDetails[id - 1],\n            [`${field}`]: value\n        }\n        const latestData = educationDetails.map((el, index ) => (index === (id - 1) ? obj : el))\n        setEducationDetails(latestData);\n    }\n\n    const onChangeWorkFields = (value, field, id) => {\n        const obj = {\n            ...workExpDetails[id - 1],\n            [`${field}`]: value\n        }\n        const latestData = workExpDetails.map((el, index ) => (index === (id - 1) ? obj : el))\n        setWorkExpDetails(latestData);\n    }\n\n    const expand = (id) => {\n        const coll = document.getElementById(id);\n        coll.classList.toggle(\"active\");\n            let content = coll.nextElementSibling;\n            if (content.style.display === \"flex\") {\n                coll.lastChild.className=\"fas fa-caret-down\"\n                content.style.display = \"none\";\n                // coll.classList.toggle(\"marginBottom\");\n            } else {\n                content.style.display = \"flex\";\n                coll.lastChild.className=\"fas fa-caret-up\"\n                content.style.marginBottom = \"20px\";\n                // coll.classList.toggle(\"marginBottom\");\n            }\n    }\n\n    const personalFields = () => {\n        return (\n            <>\n                <div className=\"form-group\">\n                    <input type=\"text\" name=\"fname\" id=\"fname\" placeholder=\"First Name\" value={fname} onChange={(e) => {setFname(e.target.value)}} required />\n                    <span style={{color: 'red', alignSelf: 'baseline'}}>*</span>\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" name=\"lname\" id=\"lname\" placeholder=\"Last Name\" value={lname} onChange={(e) => {setLname(e.target.value)}} required />\n                    <span style={{color: 'red', alignSelf: 'baseline'}}>*</span>\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" name=\"role\" id=\"role\" placeholder=\"Job Role\" value={role} onChange={(e) => {setRole(e.target.value)}} required />\n                    <span style={{color: 'red', alignSelf: 'baseline'}}>*</span>\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" name=\"objective\" id=\"objective\" placeholder=\"Objective\" value={objective} onChange={(e) => {setObjective(e.target.value)}} required />\n                    <span style={{color: 'red', alignSelf: 'baseline'}}>*</span>\n                </div>\n            </>\n        );\n    }\n\n    const contactFields = () => {\n        return (\n            <>\n                <div className=\"form-group\">\n                    <input type=\"tel\" value={phone}onChange={(e) => {setPhone(e.target.value)}} name=\"telephone\" id=\"phone\" placeholder=\"Phone Number (EX: 669-306-1518)\" pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\" required />\n                    <span style={{color: 'red', alignSelf: 'baseline'}}>*</span>\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"email\" value={email} onChange={(e) => {setEmail(e.target.value)}} name=\"email\" id=\"email\" placeholder=\"Email (EX: emailid@something.com)\"required />  \n                    <span style={{color: 'red', alignSelf: 'baseline'}}>*</span>\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"url\" value={website} onChange={(e) => {setWebsite(e.target.value)}} name=\"website\" id=\"website\" placeholder=\"Website (EX: http://example.com)\" />\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" value={address} onChange={(e) => {setAddress(e.target.value)}} name=\"address\" id=\"address\" placeholder=\"Address\" required />\n                    <span style={{color: 'red', alignSelf: 'baseline'}}>*</span>\n                </div>\n            </>\n        );\n    }\n\n    const educationFields = (id) => {\n        idList.push(`cname${id}`);\n        idList.push(`sname${id}`);\n        idList.push(`course${id}`);\n        return (\n            <>\n                <div className=\"form-group\">\n                    <input type=\"text\" value={educationDetails[id-1].cname} onChange={(e) => {onChangeEducationFields(e.target.value, 'cname', id)}} name={`cname${id}`} id={`cname${id}`} placeholder=\"Course Name\" required />\n                    <span style={{color: 'red', alignSelf: 'baseline'}}>*</span>\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" value={educationDetails[id-1].sname} onChange={(e) => {onChangeEducationFields(e.target.value, 'sname', id)}} name={`sname${id}`} id={`sname${id}`} placeholder=\"School, College, or University Name\" required />\n                    <span style={{color: 'red', alignSelf: 'baseline'}}>*</span>\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" value={educationDetails[id-1].course} onChange={(e) => {onChangeEducationFields(e.target.value, 'course', id)}} name={`course${id}`} id={`course${id}`} placeholder=\"Course details / Major\" required />\n                    <span style={{color: 'red', alignSelf: 'baseline'}}>*</span>\n                </div>\n                <div className=\"form-group\"> \n                    <Datetime\n                        // value={educationDetails[id-1].fromMonth.toString()}\n                        inputProps={{name: `fromMonth${id}`, placeholder: 'Starting Date', value: educationDetails[id-1].fromMonth.toString()}}\n                        timeFormat={false}\n                        // name={`fromMonth${id}`}\n                        id={`fromMonth${id}`}\n                        dateFormat=\"YYYY\"\n                        closeOnSelect\n                        onChange={(date) => { if(date._d) {\n                        onChangeEducationFields(date._d.getFullYear() , 'fromMonth', id);}\n                    }}/>\n                    <span style={{color: 'red', alignSelf: 'baseline'}}>*</span>\n                </div>\n                <div className=\"form-group\">\n                    <Datetime\n                        // value={educationDetails[id-1].toMonth.toString()}\n                        timeFormat={false}\n                        inputProps={{name: `toMonth${id}`, placeholder: 'Ending Date', value: educationDetails[id-1].toMonth.toString()}}\n                        // name={`toMonth${id}`}\n                        id={`toMonth${id}`}\n                        dateFormat=\"YYYY\"\n                        closeOnSelect\n                        onChange={(date) => { if(date._d) {\n                        onChangeEducationFields(date._d.getFullYear() , 'toMonth', id);}\n                    }}/>\n                    <span style={{color: 'red', alignSelf: 'baseline'}}>*</span>\n                </div>\n                <hr style={{width: '80%', color: 'black'}} />\n            </>\n        )\n    }\n\n    const workExpFields = (id) => {\n        idList.push(`designation${id}`);\n        idList.push(`company${id}`);\n        idList.push(`responsibilities${id}`);\n        idList.push(`currentJob${id}`);\n        return (\n            <>\n                <div className=\"form-group\">\n                    <input type=\"text\" value={workExpDetails[id-1].designation} onChange={(e) => {onChangeWorkFields(e.target.value, 'designation', id)}} name={`designation${id}`} id={`designation${id}`} placeholder=\"Designation\" required />\n                    <span style={{color: 'red', alignSelf: 'baseline'}}>*</span>\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" value={workExpDetails[id-1].company} onChange={(e) => {onChangeWorkFields(e.target.value, 'company', id)}} name={`company${id}`} id={`company${id}`} placeholder=\"Company Name\" required />\n                    <span style={{color: 'red', alignSelf: 'baseline'}}>*</span>\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" value={workExpDetails[id-1].responsibilities} onChange={(e) => {onChangeWorkFields(e.target.value, 'responsibilities', id)}} id={`responsibilities${id}`} placeholder=\"Responsibilities\" required />\n                    <span style={{color: 'red', alignSelf: 'baseline'}}>*</span>\n                </div>\n                <div className=\"form-group\"> \n                    <Datetime\n                        // value={workExpDetails[id-1].startMonth.toString()}\n                        timeFormat={false}\n                        inputProps={{name: `startMonth${id}`, placeholder: 'Starting Date', value: workExpDetails[id-1].startMonth.toString()}}\n                        // name={`startMonth${id}`}\n                        id={`startMonth${id}`}\n                        dateFormat=\"YYYY\"\n                        closeOnSelect\n                        onChange={(date) => {\n                        onChangeWorkFields(date._d.getFullYear() , 'startMonth', id);\n                    }}/>\n                    <span style={{color: 'red', alignSelf: 'baseline'}}>*</span>\n                </div>\n                <div className=\"form-group\" style={{display: 'flex', color: 'black', justifyContent: 'center'}}>\n                    <input checked={workExpDetails[id-1].presentWork} onChange={(e) => {onChangeWorkFields(e.target.checked, 'presentWork', id)}} type=\"checkbox\" id={`currentJob${id}`} name=\"currentJob\" className=\"currentJob\"/>\n                    <label htmlFor=\"currentJob\" style={{fontSize: '12px'}}>Presently working here</label>\n                </div>\n                <div className=\"form-group\">\n                    {!workExpDetails[id-1].presentWork && <>\n                        <Datetime\n                            timeFormat={false}\n                            inputProps={{name: `endMonth${id}`, placeholder: 'Ending Date', value: workExpDetails[id-1].endMonth.toString()}}\n                            // value={workExpDetails[id-1].endMonth.toString()}\n                            // name={`endMonth${id}`}\n                            id={`endMonth${id}`}\n                            dateFormat=\"YYYY\"\n                            closeOnSelect\n                            onChange={(date) => {\n                            onChangeWorkFields(date._d.getFullYear() , 'endMonth', id);\n                        }}/>\n                        <span style={{color: 'red', alignSelf: 'baseline'}}>*</span>\n                    </>}\n                </div>\n                <hr style={{width: '80%', color: 'black'}} />\n            </>\n        )\n    }\n\n    const generate = async (e) => {\n        const coll = document.getElementsByClassName(\"collapsible\");\n        \n        for (let i = 0; i < coll.length; i++) {\n            coll[i].nextElementSibling.style.display = \"flex\";\n            coll[i].nextElementSibling.style.marginBottom = \"20px\";\n        }\n        const isInvalid = await checkValidity();\n\n        if (!isInvalid) {\n            const formData = [{\n                fname,\n                lname,\n                role,\n                objective,\n                phone,\n                email,\n                website,\n                address,\n                educationDetails,\n                workExpDetails,\n                skills: selectedSkills,\n                hobbies: selectedHobbies,\n                image\n            }];\n            await localStorage.setItem('formData', JSON.stringify(formData));\n            setShowResume(true);\n\n        } else {\n            alert(\"Please fill the form correctly (Fill all the required fields, select atleast 1 hobby,1 skill, and profile picture, ensure that from years are less than or equal to end years and end year not greater than current year)\");\n            // clearAll();\n        }\n    }\n    \n    const clearAll = () => {\n        idList = ['fname', 'lname', 'role', 'objective', 'phone', 'email',\n        'website', 'address'];\n\n        for (let i = 1; i <= 3; i++) {\n            if (document.getElementsByName(`fromMonth${i}`)) {\n                document.getElementsByName(`fromMonth${i}`).value = ''\n            }\n            if (document.getElementsByName(`startMonth${i}`)) {\n                document.getElementsByName(`startMonth${i}`).value = ''\n            }\n            if (document.getElementsByName(`toMonth${i}`)) {\n                document.getElementsByName(`toMonth${i}`).value = ''\n            }\n            if (document.getElementsByName(`endMonth${i}`)) {\n                document.getElementsByName(`endMonth${i}`).value = ''\n            }\n        }\n\n        setSelectedHobbies([]);\n        setSelectedSkills([]);\n\n        setIsImage(false);\n        setImage('')\n        setShowResume(false);\n\n        localStorage.setItem('formData', '');\n        \n        setEducationCount(1);\n        setWorkExpCount(1);\n\n        // Personal Details\n        setFname('');\n        setLname('')\n        setRole('');\n        setObjective('')\n\n        // Contact fields\n        setPhone('');\n        setEmail('');\n        setWebsite('');\n        setAddress('');\n\n        // Education fields\n        setEducationDetails([\n            {cname: '', sname: '', course: '', fromMonth: '', toMonth: ''},\n            {cname: '', sname: '', course: '', fromMonth: '', toMonth: ''},\n            {cname: '', sname: '', course: '', fromMonth: '', toMonth: ''}\n        ]);\n\n        // Work Experience fields\n        setWorkExpDetails([\n            {designation: '', company: '', responsibilities: '', startMonth: '', endMonth: '', presentWork: false},\n            {designation: '', company: '', responsibilities: '', startMonth: '', endMonth: '', presentWork: false},\n            {designation: '', company: '', responsibilities: '', startMonth: '', endMonth: '', presentWork: false}\n        ]);\n\n        if (document.getElementById(\"img\")) {\n            document.getElementById(\"img\").value = \"\";\n        }\n    }\n    return (\n        <div className=\"wrapper\">\n            {!showResume ? \n            <div className=\"resumeForm\">\n                <h2 style={{color: 'darkslategray'}}>Resume Generator</h2>\n                <form className=\"formwrap\" id=\"form\">\n                    <button type=\"button\" className=\"collapsible\" id=\"personal\" onClick={() => expand(\"personal\")}> Personal Details<i className=\"fas fa-caret-down\" aria-hidden=\"true\"></i></button>\n                    <div className=\"content\">\n                        {personalFields()}\n                    </div>\n                    <button type=\"button\" className=\"collapsible\" id=\"contactButton\" onClick={() => expand(\"contactButton\")}> Contact Details <i className=\"fas fa-caret-down\" aria-hidden=\"true\"></i></button>\n                    <div className=\"content\">\n                        {contactFields()}\n                    </div>\n                    <button type=\"button\" className=\"collapsible\" id=\"educationButton\" onClick={() => expand(\"educationButton\")}>Education Details <i className=\"fas fa-caret-down\" aria-hidden=\"true\"></i></button>\n                    <div className=\"content\" id=\"educationWrap\" style={{paddingBottom: '150px'}}>\n                        {educationFields(1)}\n                        {(educationCount === 2 || educationCount === 3 ) && educationFields(2)}\n                        {educationCount === 3 && educationFields(3)}\n                        <div className=\"addDeleteWrap\">\n                            <button type=\"button\" className=\"addDeleteButton\" disabled={educationCount === 3} style={{marginRight: '25px'}} onClick={() => setEducationCount(educationCount + 1)}> <i className=\"fas fa-plus\" style={{color: educationCount === 3 ? 'lightgray' : 'gray'}}></i></button>\n                            <button type=\"button\" className=\"addDeleteButton\" disabled={educationCount === 1} onClick={() => setEducationCount(educationCount - 1)}> <i className=\"fas fa-trash\" style={{color: educationCount === 1 ? 'lightgray' : 'gray'}}></i></button>\n                        </div>\n                    </div>\n                    <button type=\"button\" className=\"collapsible\" id=\"workExpButton\" onClick={() => expand(\"workExpButton\")}> Work Experience <i className=\"fas fa-caret-down\" aria-hidden=\"true\"></i></button>\n                    <div className=\"content\" id=\"workExpWrap\" style={{paddingBottom: '150px'}}>\n                        {workExpFields(1)}\n                        {(workExpCount === 2 || workExpCount === 3 ) && workExpFields(2)}\n                        {workExpCount === 3 && workExpFields(3)}\n                        <div className=\"addDeleteWrap\">\n                            <button type=\"button\" className=\"addDeleteButton\" disabled={workExpCount === 3} style={{marginRight: '25px'}} onClick={() => setWorkExpCount(workExpCount + 1)}> <i className=\"fas fa-plus\" style={{color: workExpCount === 3 ? 'lightgray' : 'gray'}}></i></button>\n                            <button type=\"button\" className=\"addDeleteButton\" disabled={workExpCount === 1} onClick={() => setWorkExpCount(workExpCount - 1)}> <i className=\"fas fa-trash\" style={{color: workExpCount === 1 ? 'lightgray' : 'gray'}}></i></button>\n                        </div>\n                    </div>\n                    <button type=\"button\" className=\"collapsible\" id=\"skillsButton\" onClick={() => expand(\"skillsButton\")}> Skills <i className=\"fas fa-caret-down\" aria-hidden=\"true\"></i></button>\n                    <div className=\"content\">\n                        <FormControl className={classes.formControl}>\n                        <InputLabel id=\"demo-mutiple-chip-label\" style={{paddingLeft: '5px'}}>Select atleast one skill<span style={{color: 'red', alignSelf: 'baseline', marginLeft: '10px'}}>*</span></InputLabel>\n                            <Select\n                            labelId=\"demo-mutiple-chip-label\"\n                            classes={{ root: classes.selectRoot }}\n                            id=\"demo-mutiple-chip\"\n                            multiple\n                            value={selectedSkills}\n                            onChange={handleChange}\n                            input={<Input id=\"select-multiple-chip\" />}\n                            renderValue={(selected) => (\n                                <div className={classes.chips}>\n                                {selected.map((value) => (\n                                    <Chip key={value} label={value} className={classes.chip} />\n                                ))}\n                                </div>\n                            )}\n                            MenuProps={MenuProps}\n                            >\n                            {skills.map((name) => (\n                                <MenuItem key={name} value={name} style={getStyles(name, selectedSkills, theme)}>\n                                {name}\n                                </MenuItem>\n                            ))}\n                            </Select>\n                        </FormControl>\n                    </div>\n                    <button type=\"button\" className=\"collapsible\" id=\"hobbiesButton\" onClick={() => expand(\"hobbiesButton\")}>Hobbies <i className=\"fas fa-caret-down\" aria-hidden=\"true\"></i></button>\n                    <div className=\"content\">\n                        <FormControl className={classes.formControl}>\n                        <InputLabel id=\"demo-mutiple-chip-label\" style={{paddingLeft: '5px'}}>Select atleast one hobby<span style={{color: 'red', alignSelf: 'baseline', marginLeft: '10px'}}>*</span></InputLabel>\n                            <Select\n                            classes={{ root: classes.selectRoot }}\n                            labelId=\"demo-mutiple-chip-label\"\n                            id=\"demo-mutiple-chip\"\n                            multiple\n                            value={selectedHobbies}\n                            onChange={handleChangeHobbies}\n                            input={<Input id=\"select-multiple-chip\" />}\n                            renderValue={(selected) => (\n                                <div className={classes.chips}>\n                                {selected.map((value) => (\n                                    <Chip key={value} label={value} className={classes.chip} />\n                                ))}\n                                </div>\n                            )}\n                            MenuProps={MenuProps}\n                            >\n                            {hobbies.map((name) => (\n                                <MenuItem key={name} value={name} style={getStyles(name, selectedHobbies, theme)}>\n                                {name}\n                                </MenuItem>\n                            ))}\n                            </Select>\n                        </FormControl>\n                    </div>\n                    <label htmlFor=\"img\" style={{color: 'black', alignSelf: 'baseline', marginBottom: '20px'}}>Select image to upload<span style={{color: 'red', alignSelf: 'baseline', marginLeft: '10px'}}>*</span></label>\n                    <input type=\"file\" id=\"img\" name=\"img\" accept=\"image/*\" onChange={(event) => loadFile(event)} style={{color: 'white', background: '#476481', marginBottom: '20px'}}></input>\n                    <div className=\"submitWrap\">\n                        <button type=\"submit\" className=\"submit\" id=\"submit\" onClick={(e) => generate(e)}>Generate</button>\n                        <button type=\"reset\" className=\"submit\" id=\"reset\" onClick={() => clearAll()}>Reset</button>\n                    </div>\n                </form>\n            </div> : <ResumeTemplate generateNew={clearAll} />}\n        </div>\n    );\n}\n\nexport default ResumeInputForm;\n","// import logo from './logo.svg';\nimport ResumeInputForm from './assets/ResumeInputForm';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <ResumeInputForm />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}